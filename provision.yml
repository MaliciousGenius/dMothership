---

- hosts: all
  sudo: true
  gather_facts: false

  pre_tasks:
    - name: Установка пакета python-simplejson
      raw: sudo apt-get -y install python-simplejson

- hosts: all
  sudo: true

  vars_files:
    - variables.yml

  pre_tasks:
    - name: Верификация имени хоста
      shell: hostnamectl status | awk "/Static hostname/"'{ print $3 }'
      register: hostname_fqdn

  tasks:
    - name: Обновить систему
      apt:
        update_cache: yes
        upgrade: dist

    - name: Установить набор инструментов администратора
      apt:
        pkg: "{{ item }}"
        state: present
      with_items:
        - sysv-rc-conf
        - mc
        - curl

    - name: Установить транспорт https для менеджера пакетов
      apt:
        pkg: apt-transport-https
        state: present

    - name: Установить сертификаты корневых центров
      apt:
        pkg: ca-certificates
        state: present

    - name: Установка менеджена пакетов pip
      apt:
        pkg: python-pip
        state: present

    - name: Добавить apt-ключ Doсker
      apt_key:
        url: "https://apt.dockerproject.org/gpg"
        state: present

    - name: Подключить репозиторий Doсker к менеджеру патетов apt
      apt_repository:
        repo: "deb https://apt.dockerproject.org/repo ubuntu-{{ ansible_distribution_release }} main"
        filename: "docker"
        state: present

    - name: Установка Docker
      apt:
        name: docker-engine
        update_cache: yes
        state: present
      notify: restart Docker

    - name: Инициализация мастера
      shell: "docker swarm init --advertise-addr {{ alpha.ip }}:2377"
      when: hostname_fqdn.stdout == "alpha"

    - name: Получить ключ безопастности Docker
      shell: "docker swarm join-token -q manager"
      register: token
      delegate_to: alpha
      when: hostname_fqdn.stdout == "beta"

    - name: Подключиться к Docker Swarm
      shell: "docker swarm join --token {{ token.stdout }} {{ alpha.ip }}:2377"
      when: hostname_fqdn.stdout == "beta"

    - debug:
        msg: "{{ token.stdout }}"
      when: hostname_fqdn.stdout == "beta"

    - name: install app stack
      command: 'docker stack deploy -c /vagrand/stacks/test.yml test'
      when: hostname_fqdn.stdout == "beta"

  handlers:
    - name: restart Docker
      service:
        name: docker
        state: restarted
