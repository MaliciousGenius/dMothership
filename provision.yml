---

- hosts: all
  sudo: true
  gather_facts: false

  pre_tasks:
    - name: Установка пакета python-simplejson
      raw: sudo apt-get -y install python-simplejson

- hosts: all
  sudo: true

  tasks:
    - name: Обновить систему
      apt:
        update_cache: yes
        upgrade: dist

    - name: Установить набор инструментов администратора
      apt:
        pkg: "{{ item }}"
        state: present
      with_items:
        - sysv-rc-conf
        - mc
        - curl

    - name: Установить транспорт https для менеджера пакетов
      apt:
        pkg: apt-transport-https
        state: present

    - name: Установить сертификаты корневых центров
      apt:
        pkg: ca-certificates
        state: present

    - name: Установка менеджена пакетов pip
      apt:
        pkg: python-pip
        state: present

    - name: Добавить apt-ключь Doсker
      apt_key:
        url: "https://apt.dockerproject.org/gpg"
        state: present

    - name: Подключить репозиторий Doсker к менеджеру патетов apt
      apt_repository:
        repo: "deb https://apt.dockerproject.org/repo ubuntu-{{ ansible_distribution_release }} main"
        filename: "docker"
        state: present

    - name: Установка Docker
      apt:
        name: docker-engine
        update_cache: yes
        state: present
      notify: restart Docker

    - name: Добавить apt-ключь Kubernetes
      apt_key:
        url: "https://packages.cloud.google.com/apt/doc/apt-key.gpg"
        state: present

    - name: Подключить репозиторий Kubernetes к менеджеру патетов apt
      apt_repository:
        repo: "deb http://apt.kubernetes.io/ kubernetes-{{ ansible_distribution_release }} main"
        filename: "kubernetes"
        state: present

    - name: Установка Kubernetes
      apt:
        pkg: "{{ item }}"
        update_cache: yes
        state: present
      with_items:
        - kubelet
        - kubeadm
        - kubernetes-cni

  handlers:
    - name: restart Docker
      service:
        name: docker
        state: restarted

- hosts: alpha
  sudo: true

  vars_files:
    - variables.yml

  pre_tasks:
    - name: Получить IP адрес публичной сети
      shell: 'hostname -I | cut -f2 -d" "'
      register: public_network_ip

  tasks:
    - name: Инициализация мастера
      shell: "kubeadm init --token {{ kubeadm_join_token }} --apiserver-advertise-address {{ public_network_ip.stdout }}"
